
[color]
    branch = auto
    diff = auto
    status = auto
[color "branch"]
    current = yellow reverse
    local = yellow
    remote = green
[color "diff"]
    meta = yellow bold
    frag = magenta bold
    old = red bold
    new = green bold
[color "status"]
    added = yellow
    changed = green
    untracked = cyan
[alias]
  g = git
  cm = shortlog -nse --no-merges

  fi = !git ls-files | grep -i
  gr = grep -Ii

  # log (hash, relative date, commit, commiter)
  ld = log --pretty=format:'%C(yellow)%h %C(bold red)%ad%C(reset)%C(red)%d %C(reset)%s%C(blue) [%cn]' --decorate --date=relative
  # log git history tree graph
  lg = log --graph --decorate
  # log edited files per commit
  lf = log --pretty=format:'%C(yellow)%h%C(red)%d %C(reset)%s%C(blue) [%cn]' --decorate --numstat

  ph = push origin
  pl = pull origin

  s = status -vsb

  # if no arguments clear the stash
  # or drop multiple stashes passing the numbers
  # usage: git shd 2 5 6 9
  shd = "!f() { !(($#)) && git stash clear || for ((i=1;i<=$#;i++)); do n=$((${!i}+1-$i)); git stash drop stash@{$n} & done; wait; }; f"

  # show specified stash changes
  # usage: git shs 3
  shs = !sh -c 'git stash show -p stash@{$0}'

  gh = !git init && git add . && git commit -am 'add(*): initial commit' && git remote add origin git@github.com:julien/$(basename $PWD).git && git push -u origin master

  # show un merged
  sm = diff --name-status --diff-filter=U
  unstage = reset --
  
  # Delete all the local merged branches
  cleanup = "!git branch --merged | grep  -v '\\*\\|master\\|main\\|develop\\|dev' | xargs -n 1 -r git branch -d"
  # fetch and rebase
  # if not arguments passed, the command executed will be git fetch origin <current-branch>
  # usage:
  # git get
  # or
  # git get someOrigin someBranch
  get = "!f() { o=origin && (($#)) && o=$1; b=$(git rev-parse --abbrev-ref HEAD) && (($#>1)) && b=$2; (git fetch $o $b && git rebase $o/$b) }; f"

[merge]
	tool = opendiff
[diff]
	tool = opendiff
[difftool]
	prompt = false
[user]
	name = zwergius
	email = webmaster@zwergius.com
# These values are set in ~/.local.gitconfig
[difftool "diffmerge"]
	cmd = diffmerge \"$LOCAL\" \"$REMOTE\"
[mergetool "diffmerge"]
	cmd = "opendiff --merge --result=\"$MERGED\" \"$LOCAL\" \"$(if test -f \"$BASE\"; then echo \"$BASE\"; else echo \"$LOCAL\"; fi)\" \"$REMOTE\""
	trustExitCode = true
[push]
	default = simple
	autoSetupRemote = true
[core]
	excludesfile = ~/.gitignore
	pager = diff-so-fancy | less --tabs=4 -RFX
[include]
  path = ~/.local.gitconfig
[pull]
	ff = only
[fetch]
	prune = true
